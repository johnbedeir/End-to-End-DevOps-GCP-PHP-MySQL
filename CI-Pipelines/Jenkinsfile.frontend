pipeline {
    agent any

    environment {
        REPOSITORY_URI = "${env.FRONTEND_REPOSITORY_URI}"
        IMAGE_TAG = "${env.TAG}"
        GCP_PROJECT = "${env.GCP_PROJECT}"
        DOCKERFILE_PATH = "${env.APP_DOCKERFILE_PATH}"
        ENV_CREDENTIAL_ID = "env-file-credentials"  // Set the credential ID for the .env file
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Prepare Environment') {
            steps {
                script {
                    withCredentials([string(credentialsId: env.ENV_CREDENTIAL_ID, variable: 'ENV_CONTENT')]) {
                        writeFile file: '.env', text: "${ENV_CONTENT}"
                    }
                }
            }
        }

        stage('Login to GCR') {
            steps {
                withCredentials([file(credentialsId: 'gcp-key-file', variable: 'GCP_KEY_FILE')]) {
                    sh 'gcloud auth activate-service-account --key-file=$GCP_KEY_FILE'
                    sh 'gcloud auth configure-docker'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -f $DOCKERFILE_PATH/frontend.Dockerfile -t $REPOSITORY_URI:$IMAGE_TAG $DOCKERFILE_PATH/'
            }
        }

        stage('Push Docker Image to GCR') {
            steps {
                sh 'docker push $REPOSITORY_URI:$IMAGE_TAG'
            }
        }
    }

    post {
        always {
            script {
                sh 'docker rmi $REPOSITORY_URI:$IMAGE_TAG'
            }
        }
    }
}
